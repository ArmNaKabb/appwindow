// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Youtube_Videos ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class Youtube_VideosViewModel : ViewModelsBase.VMBase, IViewModels.IYoutube_VideosViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly Repositories.IYoutube_Youtube _youtube_Youtube;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Youtube_VideosViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="youtube_Youtube">The Youtube_ Youtube.</param>
        public Youtube_VideosViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, Repositories.IYoutube_Youtube youtube_Youtube)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_youtube_Youtube = youtube_Youtube;
        }
		
	
		private ObservableCollection<EntitiesBase.YouTubeVideo> _youtube_VideosListControlCollection;

        /// <summary>
        /// Youtube_VideosListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.YouTubeVideo> Youtube_VideosListControlCollection
        {
            get
            {
				
                if(_youtube_VideosListControlCollection == null)
					GetYoutube_VideosListControlCollectionData();
				return _youtube_VideosListControlCollection;     
            }
            set
            {
                SetProperty(ref _youtube_VideosListControlCollection, value);
            }
        }
	
		private int _youtube_VideosListControlCollectionPageNumber;

        /// <summary>
        /// Youtube_VideosListControlCollectionPageNumber property.
        /// </summary>		
        public int Youtube_VideosListControlCollectionPageNumber
        {
            get
            {
				return _youtube_VideosListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _youtube_VideosListControlCollectionPageNumber, value);
            }
        }
	
		private EntitiesBase.YouTubeVideo _selectedYoutube_VideosListControlCollection;

        /// <summary>
        /// SelectedYoutube_VideosListControlCollection property.
        /// </summary>		
        public EntitiesBase.YouTubeVideo SelectedYoutube_VideosListControlCollection
        {
            get
            {
				return _selectedYoutube_VideosListControlCollection;
            }
            set
            {
                _selectedYoutube_VideosListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IYoutube_DetailVideosViewModel>(_selectedYoutube_VideosListControlCollection);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshYoutube_VideosListControlCollectionCommand command.
        /// </summary>
        public async void RefreshYoutube_VideosListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingYoutube_VideosListControlCollection = true;
				var items = await  _youtube_Youtube.Refresh();
				Youtube_VideosListControlCollection = items;
				Youtube_VideosListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				Youtube_VideosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.youtubeError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingYoutube_VideosListControlCollection = false;
			}
        }
		
		
        private bool _loadingYoutube_VideosListControlCollection;
		
        public bool LoadingYoutube_VideosListControlCollection
        {
            get { return _loadingYoutube_VideosListControlCollection; }
            set { SetProperty(ref _loadingYoutube_VideosListControlCollection, value); }
        }

        private ICommand _refreshYoutube_VideosListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshYoutube_VideosListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshYoutube_VideosListControlCollectionCommand
        {
            get { return _refreshYoutube_VideosListControlCollectionCommand = _refreshYoutube_VideosListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshYoutube_VideosListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetYoutube_VideosListControlCollectionCommand command.
        /// </summary>
        public  void GetYoutube_VideosListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetYoutube_VideosListControlCollectionData(pageNumber);
        }
		

        private ICommand _getYoutube_VideosListControlCollectionCommand;

        /// <summary>
        /// Gets the GetYoutube_VideosListControlCollectionCommand command.
        /// </summary>
        public ICommand GetYoutube_VideosListControlCollectionCommand
        {
            get { return _getYoutube_VideosListControlCollectionCommand = _getYoutube_VideosListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetYoutube_VideosListControlCollectionCommandDelegate); }
        }

        private async void GetYoutube_VideosListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingYoutube_VideosListControlCollection = true;
				Youtube_VideosListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _youtube_Youtube.GetData(pageNumber);
                    Youtube_VideosListControlCollection = items;
				}
                else   
				{
					var items = await _youtube_Youtube.GetData(pageNumber);
                    foreach (var item in items)                    
                        Youtube_VideosListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				Youtube_VideosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.youtubeError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingYoutube_VideosListControlCollection = false;
			}
		}
    }
}
